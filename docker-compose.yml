services:
  # PostgreSQL Database
  postgres:
    image: postgres:14
    container_name: crm_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: crm_db
      POSTGRES_USER: crm_user
      POSTGRES_PASSWORD: crm_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crm_user -d crm_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - crm_network

  # Redis for messaging and caching
  redis:
    image: redis:7-alpine
    container_name: crm_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./scripts/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - crm_network

  # User Service
  user_service:
    build:
      context: ./services/user_service
      dockerfile: Dockerfile
    container_name: crm_user_service
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql+asyncpg://crm_user:crm_password@postgres:5432/crm_db
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
      - SECRET_KEY=your-secret-key-here
      - ACCESS_TOKEN_EXPIRE_MINUTES=480
    ports:
      - "8001:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./services/user_service:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - crm_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Budget Service
  budget_service:
    build:
      context: ./services/budget_service
      dockerfile: Dockerfile
    container_name: crm_budget_service
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql+asyncpg://crm_user:crm_password@postgres:5432/crm_db
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
    ports:
      - "8002:8002"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./services/budget_service:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8002 --reload
    networks:
      - crm_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # API Gateway (Nginx) - Desenvolvimento
  api_gateway:
    image: nginx:alpine
    container_name: crm_api_gateway
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/nginx.conf
      - /dev/null:/etc/nginx/conf.d/default.conf
    depends_on:
      user_service:
        condition: service_healthy
      budget_service:
        condition: service_healthy
    networks:
      - crm_network

  # Frontend (React/Vite with Nginx)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: crm_frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      user_service:
        condition: service_healthy
      budget_service:
        condition: service_healthy
    networks:
      - crm_network

volumes:
  postgres_data:
  redis_data:

networks:
  crm_network:
    driver: bridge
