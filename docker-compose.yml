services:
  # PostgreSQL Database
  postgres:
    image: postgres:14
    container_name: crm_postgres
    environment:
      POSTGRES_DB: crm_db
      POSTGRES_USER: crm_user
      POSTGRES_PASSWORD: crm_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crm_user -d crm_db"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for messaging and caching
  redis:
    image: redis:7-alpine
    container_name: crm_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # User Service
  user_service:
    build:
      context: ./services/user_service
      dockerfile: Dockerfile
    container_name: crm_user_service
    environment:
      - DATABASE_URL=postgresql+asyncpg://crm_user:crm_password@postgres:5432/crm_db
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
    ports:
      - "8001:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./services/user_service:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

volumes:
  postgres_data:
  redis_data: