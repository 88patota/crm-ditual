#!/bin/bash

# Script para corrigir problemas de banco de dados no ambiente EC2
# Este script deve ser executado ANTES das migra√ß√µes se houver problemas de autentica√ß√£o

set -e

echo "üîß Corrigindo problemas de banco de dados no ambiente EC2..."
echo "=========================================================="

# Verificar se o arquivo .env.prod existe
if [ ! -f ".env.prod" ]; then
    echo "‚ùå Arquivo .env.prod n√£o encontrado!"
    exit 1
fi

# Carregar vari√°veis de ambiente
echo "üîß Carregando vari√°veis de ambiente..."
set -a
source .env.prod
set +a

echo "üìã Configura√ß√µes carregadas:"
echo "  - Database: ${POSTGRES_DB}"
echo "  - User: ${POSTGRES_USER}"
echo "  - Host: ${POSTGRES_HOST}"
echo ""

# Parar containers se estiverem rodando
echo "üõë Parando containers..."
docker-compose -f docker-compose.prod.yml down

# Remover volumes do PostgreSQL (CUIDADO: isso apaga todos os dados!)
echo "‚ö†Ô∏è  Removendo volumes do PostgreSQL (dados ser√£o perdidos)..."
docker volume rm crm-ditual_postgres_data 2>/dev/null || true

# Recriar containers
echo "üöÄ Recriando containers..."
docker-compose -f docker-compose.prod.yml up -d postgres

# Aguardar PostgreSQL estar pronto
echo "‚è≥ Aguardando PostgreSQL estar pronto..."
sleep 20

# Verificar se o PostgreSQL est√° rodando
echo "üîç Verificando status do PostgreSQL..."
docker-compose -f docker-compose.prod.yml exec postgres pg_isready -U postgres
if [ $? -ne 0 ]; then
    echo "‚ùå PostgreSQL n√£o est√° respondendo!"
    exit 1
fi

# Criar usu√°rio e banco manualmente
echo "üë§ Criando usu√°rio e banco de dados..."
docker-compose -f docker-compose.prod.yml exec postgres psql -U postgres -c "
    DROP DATABASE IF EXISTS ${POSTGRES_DB};
    DROP USER IF EXISTS ${POSTGRES_USER};
    CREATE USER ${POSTGRES_USER} WITH PASSWORD '${POSTGRES_PASSWORD}';
    CREATE DATABASE ${POSTGRES_DB} OWNER ${POSTGRES_USER};
    GRANT ALL PRIVILEGES ON DATABASE ${POSTGRES_DB} TO ${POSTGRES_USER};
"

# Testar conex√£o
echo "üîê Testando autentica√ß√£o..."
docker-compose -f docker-compose.prod.yml exec postgres psql -U ${POSTGRES_USER} -d ${POSTGRES_DB} -c "SELECT 'Conex√£o OK' as status;"

if [ $? -eq 0 ]; then
    echo "‚úÖ Banco de dados corrigido com sucesso!"
    echo ""
    echo "üöÄ Agora voc√™ pode subir os outros servi√ßos:"
    echo "   docker-compose -f docker-compose.prod.yml up -d"
    echo ""
    echo "üìã E executar as migra√ß√µes:"
    echo "   ./scripts/run_all_migrations_ec2.sh"
else
    echo "‚ùå Ainda h√° problemas com a autentica√ß√£o!"
    exit 1
fi